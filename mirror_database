#!/usr/bin/python3
#	pybsaberdb - Python interface to BeastSaber database
#	Copyright (C) 2019-2020 Johannes Bauer
#
#	This file is part of pybsaberdb.
#
#	pybsaberdb is free software; you can redistribute it and/or modify
#	it under the terms of the GNU General Public License as published by
#	the Free Software Foundation; this program is ONLY licensed under
#	version 3 of the License, later versions are explicitly excluded.
#
#	pybsaberdb is distributed in the hope that it will be useful,
#	but WITHOUT ANY WARRANTY; without even the implied warranty of
#	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#	GNU General Public License for more details.
#
#	You should have received a copy of the GNU General Public License
#	along with pybsaberdb; if not, write to the Free Software
#	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#	Johannes Bauer <JohannesBauer@gmx.de>

import sys
from BeastSaberDB import BeastSaberDB
from FriendlyArgumentParser import FriendlyArgumentParser

parser = FriendlyArgumentParser(description = "Mirror the Beat Saber custom song database from BeastSaber.")
parser.add_argument("-v", "--verbose", action = "count", default = 0, help = "Increases verbosity. Can be specified multiple times to increase.")
parser.add_argument("action", metavar = "action", type = str, choices = [ "mirror_all", "fill_details" ], nargs = "+", help = "Actions to perform. Can be one or more of %(choices)s.")
args = parser.parse_args(sys.argv[1:])

db = BeastSaberDB()
for action in args.action:
	if action == "mirror_all":
		db.fill_songs_complete_db(verbose = (args.verbose >= 1))
	elif action == "fill_details":
		db.fill_missing_song_details(verbose = (args.verbose >= 1))
	else:
		raise NotImplementedError(action)
